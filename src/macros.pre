<?php

macro {
    class ·ns()·class {
        ···body
    }
} >> {
    class ·class {
        use \Pre\ClassAccessors\ClassAccessorsTrait;

        ···body
    }
}

macro ·unsafe {
    private T_VARIABLE·name {
        ·repeat(
            ·either(
                ·chain(
                    get,
                    ·between(
                        ·token("{"), ·layer(), ·token("}")
                    )·getter_body
                )·getter,
                ·chain(
                    set,
                    ·between(
                        ·token("{"), ·layer(), ·token("}")
                    )·setter_body
                )·setter,
                ·chain(
                    unset,
                    ·between(
                        ·token("{"), ·layer(), ·token("}")
                    )·unsetter_body
                )·unsetter
            )
        )·accessors
    }
    ·optional(·token(";"))
} >> {
    private T_VARIABLE·name;

    ··trim(
        ·accessors ··· {
            ·getter ?··· {
                public function ··concat(get ··studly(··unvar(T_VARIABLE·name)))() {
                    ·getter_body
                }
            }
            ·setter ?··· {
                public function ··concat(set ··studly(··unvar(T_VARIABLE·name)))($value) {
                    ·setter_body
                }
            }
            ·unsetter ?··· {
                public function ··concat(unset ··studly(··unvar(T_VARIABLE·name)))() {
                    ·unsetter_body
                }
            }
        }
    )
}

macro {
    function __get(···parameters) {
        accessors;
        ···body
    }
} >> {
    function __get(···parameters) {
        if ($result = $this->handleGetClassAccessors(···parameters)) {
            return $result;
        }

        ···body
    }
}

macro {
    function __set(···parameters) {
        accessors;
        ···body
    }
} >> {
    function __set(···parameters) {
        if ($result = $this->handleSetClassAccessors(···parameters)) {
            return $result;
        }

        ···body
    }
}

macro {
    function __unset(···parameters) {
        accessors;
        ···body
    }
} >> {
    function __unset(···parameters) {
        if ($result = $this->handleUnsetClassAccessors(···parameters)) {
            return $result;
        }

        ···body
    }
}
